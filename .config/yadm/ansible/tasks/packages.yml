---
- name: Install Linux packages
  when: (ansible_system | lower) == 'linux'
  vars:
    json_packages: >-
      {{ packages | to_json | from_json }}

  block:
    - name: System packages
      tags: ["packages", "system"]
      vars:
        # Extracts package names based on the current OS family for overridden packages
        os_packages: >-
          {{ json_packages | community.general.json_query('[?(!flatpak && !snap) || ' + os_family + '][' + os_family + ' || name][]') }}
      block:
        - name: Packages to install
          ansible.builtin.debug:
            var: os_packages

        - name: Install Arch Linux packages
          when: os_family == 'archlinux'
          block:
            - name: Install repository packages
              community.general.pacman:
                name: >-
                  {{ os_packages | select('string') }}
                update_cache: true
              become: true

            - name: Make sure that yay is installed
              kewlfft.aur.aur:
                use: makepkg
                name:
                  - yay
                state: present

            - name: Import 1Password gpg key
              community.general.pacman_key:
                id: 3FEF9748469ADBE15DA7CA80AC2D62742012EA22
                url: https://downloads.1password.com/linux/keys/1password.asc
                state: present

            - name: Import Dropbox gpg key
              community.general.pacman_key:
                id: 1C61A2656FB57B7E4DE0F4C1FC918B335044912E
                keyserver: keyserver.ubuntu.com
                state: present

            - name: Install AUR packages
              kewlfft.aur.aur:
                use: yay
                name: "{{ item }}"
                state: present
              loop: >-
                {{ os_packages | selectattr('aur', 'defined') | map(attribute='aur') | sort }}

        - name: Install Debian-based packages
          when: os_family == 'debian'
          block:
            - name: Add apt repositories
              ansible.builtin.debug:
                msg: "TODO: Add repositories for packages that aren't available in the default repos"

            - name: Install packages
              ansible.builtin.apt:
                name: >-
                  {{ os_packages }}
                update_cache: true
                state: present
              become: true

    - name: Flatpaks
      tags: ["packages", "flatpaks"]
      vars:
        flatpak_packages: >-
          {{ json_packages | community.general.json_query('[?flatpak && !' + os_family + '][flatpak][]') }}
      block:
        - name: Flatpaks to install
          ansible.builtin.debug:
            var: flatpak_packages

        - name: Install flatpak in all distributions
          ansible.builtin.package:
            name:
              - flatpak
            state: present
          become: true

        - name: Add the Gnome flatpak remote to the system installation
          community.general.flatpak_remote:
            name: gnome
            state: present
            flatpakrepo_url: https://sdk.gnome.org/gnome-apps.flatpakrepo
          become: true

        - name: Add the flathub flatpak repository remote to the user installation
          community.general.flatpak_remote:
            name: flathub
            state: present
            flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
          become: true

        - name: Install Flatpak packages
          community.general.flatpak:
            name: "{{ item }}"
            state: present
            method: system
          become: true
          loop: >-
            {{ flatpak_packages | sort }}

    - name: Snaps
      tags: ["packages", "snaps"]
      vars:
        snap_packages: >-
          {{ json_packages | community.general.json_query('[?snap && !flatpak && !' + os_family + '][snap][]') }}

      block:
        - name: Snaps to install
          ansible.builtin.debug:
            var: snap_packages

        - name: Make sure that snapd and AppArmor are installed
          when: os_family == 'archlinux'
          kewlfft.aur.aur:
            name:
              - apparmor
              - snapd
            use: yay
            state: present

        - name: make sure required services are running
          ansible.builtin.systemd_service:
            name: "{{ item }}"
            state: started
            enabled: true
          become: true
          loop:
            - snapd.service
            - snapd.socket
            - apparmor.service
            - snapd.apparmor.service

        - name: Install snap packages
          community.general.snap:
            name: "{{ item }}"
            state: present
          become: true
          loop: >-
            {{ snap_packages | sort }}

        - name: Fix NordVPN permissions
          block:
            - name: Add nordvpn group
              ansible.builtin.group:
                name: nordvpn
              become: true

            - name: Add user to nordvpn group
              ansible.builtin.user:
                name: "{{ lookup('env', 'USER') }}"
                groups: nordvpn
              become: true

            - name: Connect NordVPN snap interfaces
              community.general.snap: |
                snap connect nordvpn:network-control
                snap connect nordvpn:network-observe
                snap connect nordvpn:firewall-control
                snap connect nordvpn:login-session-observe
                snap connect nordvpn:system-observe
              become: true


    - name: Make sure bluetooth.service is running
      ansible.builtin.systemd_service:
        name: bluetooth.service
        state: started
        enabled: true
      become: true

- name: Install Homebrew packages
  when: os_family in ['darwin', 'debian']

  block:
    - name: Check if Homebrew is installed
      ansible.builtin.command: brew --version
      register: brew_installed
      ignore_errors: true

    - name: Check for Brewfile
      ansible.builtin.stat:
        path: "~/.Brewfile"
      register: brewfile_exists

    - name: Install from Brewfile
      ansible.builtin.command: brew bundle --global
      when: brew_installed.rc == 0 and brewfile_exists.stat.exists
