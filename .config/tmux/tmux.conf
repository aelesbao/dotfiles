# vim:fileencoding=utf-8:ft=tmux:foldmethod=marker

# Custom settings {{{

# Change tmux prefix key to Ctrl+S because it's easier to hit
set -g prefix C-s

# Enables extended terminal capabilities in tmux
# set-option -s default-terminal 'tmux-256color'

# Instructs the session to use True Color (24 bit) if the terminal supports it
set-option -sa terminal-overrides ',*256color*:Tc'
set-option -sa terminal-overrides ',alacritty*:Tc'
set-option -sa terminal-overrides ',*kitty:Tc'

# Enables undercurl in Alacritty
set-option -sa terminal-features ",alacritty*:usstyle"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# When we add/remove windows, renumber them in sequential order.
set -g renumber-windows on

# Rename windows using the git root directory
set -g automatic-rename on

# Move the status bar to the top
set -g status-position top

# Enable visual alerts for windows. Hide bells/silence.
set-window-option -g monitor-activity off # highlight active windows?
#set-option -g visual-activity off         # show a message on window activity?
#set-option -g visual-silence off
#set-option -g visual-bell off
#set-option -g bell-action none

# Constrain the window only if a smaller client is actively looking at it.
set -g window-size latest
set-window-option -g aggressive-resize on

# Goes to the previous session if the current one is destroyed
set -g detach-on-destroy off

# }}}

# Key mappings {{{

# too lazy to hold shift
bind \; command-prompt

# Improved copy mode
# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Window navigation
bind -n 'M-H' previous-window
bind -n 'M-{' previous-window
bind -n 'M-L' next-window
bind -n 'M-}' next-window

# Switch windows alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Open new window
bind -T prefix c new-window
bind -n M-t new-window

# Zoom in and out
bind -n M-Enter resize-pane -Z

# Clears the terminal history
# bind -n M-k if -F '#{m|r:(zsh|bash),#{pane_current_command}}' clear-history

# Open tmux config in an editor
bind -n M-\, run 'tmux new-window -c ~ "nvim ~/.tmux.conf"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | \
   grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf|lazygit)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

# Select the last pane keeping the zoom status
# bind -n 'M-;' if-shell "$is_vim" 'send-keys M-\;' 'select-pane -Z -t :.+'
bind -n 'M-;' select-pane -Z -t :.+

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R
bind -T copy-mode-vi 'M-;' select-pane -l

# }}}

# Plugins {{{

# Plugins list {{{

# Tmux Plugin Manager.
set -g @plugin 'tmux-plugins/tpm'

# Basic tmux settings everyone can agree on.
set -g @plugin 'tmux-plugins/tmux-sensible'

# Standard pane key-bindings for tmux.
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Plugin for copying to system clipboard. Works on MacOS, Linux and Cygwin.
set -g @plugin 'tmux-plugins/tmux-yank'

# Persists tmux environment across system restarts.
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Continuous saving of tmux environment. Automatic restore when tmux is started.
# Automatic tmux start when computer is turned on.
set -g @plugin 'tmux-plugins/tmux-continuum'

# A Tokyo Night tmux theme directly inspired from Tokyo Night vim theme.
#set -g @plugin 'fabioluciano/tmux-tokyo-night'

# Soothing pastel theme for Tmux.
set -g @plugin 'catppuccin/tmux'

# Plug and play battery percentage and icon indicator for Tmux.
set -g @plugin 'tmux-plugins/tmux-battery'

# Plug and play cpu percentage and icon indicator.
#set -g @plugin 'tmux-plugins/tmux-cpu'

# }}}

# Plugins settings {{{

# Change default keybindings for tmux-ressurect
set -g @resurrect-save 'F5'
set -g @resurrect-restore 'F6'

# Restore additional programs
set -g @resurrect-processes 'lazygit "~node dev"'

# Restore pane contents. Check the `default-command` tmux option;
# it shouldn't contain `&&` or `||` operators.
set -g @resurrect-capture-pane-contents 'on'

# Restores neovim sessions (if present).
set -g @resurrect-strategy-nvim 'session'

# Don't automatically restore sessions.
set -g @continuum-restore 'on'

# Tokyo Night Theme configuration
#set -g @theme_variation 'storm'
#set -g @theme_left_separator ''
#set -g @theme_right_separator ''
#set -g @theme_plugin_datetime_format '%a %F %R'
# Use the basename of the current folder for the window name
#set -g automatic-rename-format '#(basename "$(git root 2>/dev/null)" || echo "#{b:pane_current_path}")'

# Catppuccin theme settings
set -g @catppuccin_flavour 'mocha'

set -g @catppuccin_status_modules_right 'application session'
if '[ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]' \
   'set -ga @catppuccin_status_modules_right " host"'

set -ga @catppuccin_status_modules_right ' battery date_time'

set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_window_default_text "#W"

set -g automatic-rename off
# set -g automatic-rename-format '#{b:pane_current_path}#{?pane_in_mode,[#{pane_current_command}],}'


# }}}

# Plugin Manager installation {{{

# Automatic tpm installation
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

# Manually load plugins not managed with tpm
run '~/.config/tmux/plugins/tmux-sensionizer/sensionizer.tmux'

# }}}

# Plugins fixes {{{

# Remaps weird horizontal panel split combination from tmux-pain-control
bind "\\" split-window -h -c "#{pane_current_path}"
bind "|"  split-window -fh -c "#{pane_current_path}"

# }}}

# }}}
